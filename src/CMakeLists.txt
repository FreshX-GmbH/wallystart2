set(TEST_SRC drmtest.c)

# Remove buildroot flags (such as rdynamic to avoid buggy builds)
SET(CMAKE_SHARED_LIBRARY_LINK_C_FLAGS "")

if(${CMAKE_SYSTEM_PROCESSOR} MATCHES "arm")
  set(RPIBCM_LIBS bcm_host)
  set(CMAKE_C_FLAGS  "${CMAKE_C_FLAGS} ${RPI_C_FLAGS}")
#  set(WALLYP wallypixel.cpp slog.c wallylistener.c pixel.cpp clinkt.cpp low_level.cpp)
#  set(CMAKE_C_FLAGS  "${CMAKE_C_FLAGS} -DWALLYPIXEL -DRASPBERRY")
#  add_executable(wallypixel ${WALLYP})
#  target_link_libraries(wallypixel pthread ${LIBBCM_LIBRARIES})
#  install(TARGETS wallypixel DESTINATION ${BIN_INSTALL_DIR})
endif()

set(WALLYC_SRC wallyc.cpp tcp.cpp)
add_executable(wallyc ${WALLYC_SRC})
target_link_libraries(wallyc)
install(TARGETS wallyc DESTINATION ${BIN_INSTALL_DIR})

set(WALLYS wallystart.c slog.c wallylistener.c)
set(CMAKE_C_FLAGS  "${CMAKE_C_FLAGS} -DWALLYSTART")
add_executable(wallystart ${WALLYS})
target_link_libraries(wallystart ${LIBSDL_LIBRARIES} ${LIBSDLIMG_LIBRARIES} ${LIBSDLTTF_LIBRARIES} SDL2_gfx pthread ${RPI_LD_FLAGS} ${RPIBCM_LIBS})
install(TARGETS wallystart DESTINATION ${BIN_INSTALL_DIR})

if(WITH_VIDEO STREQUAL on)
    set(WALLYV wallyvideo.c slog.c wallylistener.c)
    include_directories(${FFMPEG_INCLUDES})
    set(CMAKE_C_FLAGS  "${CMAKE_C_FLAGS} -DWALLYVIDEO -Wno-deprecated-declarations")
    add_executable(wallyvideo ${WALLYV})
    target_link_libraries(wallyvideo ${LIBSDL_LIBRARIES} ${LIBSDLIMG_LIBRARIES} ${LIBSDLTTF_LIBRARIES} SDL2_gfx pthread ${FFMPEG_LIBRARIES} ${LIBAVUTIL_LIBRARIES} swscale ${RPIBCM_LIBS})
    install(TARGETS wallyvideo DESTINATION ${BIN_INSTALL_DIR})
endif()
